{"remainingRequest":"/home/william/Documents/Vue-Sample/node_modules/babel-loader/lib/index.js!/home/william/Documents/Vue-Sample/node_modules/eslint-loader/index.js??ref--13-0!/home/william/Documents/Vue-Sample/src/store.js","dependencies":[{"path":"/home/william/Documents/Vue-Sample/src/store.js","mtime":1550078388839},{"path":"/home/william/Documents/Vue-Sample/node_modules/cache-loader/dist/cjs.js","mtime":1549927770420},{"path":"/home/william/Documents/Vue-Sample/node_modules/babel-loader/lib/index.js","mtime":1549927770356},{"path":"/home/william/Documents/Vue-Sample/node_modules/eslint-loader/index.js","mtime":1549927770672}],"contextDependencies":[],"result":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport router from '@/router';\nimport VuexPersistence from 'vuex-persist';\nVue.use(Vuex);\nvar bitcoinApi = 'https://api.coindesk.com/v1/bpi/currentprice.json';\nexport default new Vuex.Store({\n  state: {\n    isAuthenticated: false\n  },\n  plugins: [new VuexPersistence().plugin],\n  mutations: {\n    setIsAuthenticated: function setIsAuthenticated(state, payload) {\n      state.isAuthenticated = payload;\n    }\n  },\n  actions: {\n    userLogin: function userLogin(_ref, _ref2) {\n      var commit = _ref.commit;\n      var email = _ref2.email,\n          password = _ref2.password;\n\n      if (email == \"admin@admin.com\" && password == 123456) {\n        commit('setIsAuthenticated', true);\n        router.push('/');\n      }\n    },\n    userSignOut: function userSignOut(_ref3) {\n      var commit = _ref3.commit;\n      commit('setIsAuthenticated', false);\n      router.push('/');\n    }\n  },\n  getters: {\n    isAuthenticated: function isAuthenticated(state) {\n      return state.isAuthenticated;\n    }\n  }\n});",{"version":3,"sources":["/home/william/Documents/Vue-Sample/src/store.js"],"names":["Vue","Vuex","axios","router","VuexPersistence","use","bitcoinApi","Store","state","isAuthenticated","plugins","plugin","mutations","setIsAuthenticated","payload","actions","userLogin","commit","email","password","push","userSignOut","getters"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEAJ,GAAG,CAACK,GAAJ,CAAQJ,IAAR;AAEA,IAAMK,UAAU,GAAG,mDAAnB;AAIA,eAAe,IAAIL,IAAI,CAACM,KAAT,CAAe;AAC1BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,eAAe,EAAE;AADd,GADmB;AAI1BC,EAAAA,OAAO,EAAE,CAAC,IAAIN,eAAJ,GAAsBO,MAAvB,CAJiB;AAK1BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,kBADO,8BACYL,KADZ,EACmBM,OADnB,EAC4B;AAC/BN,MAAAA,KAAK,CAACC,eAAN,GAAwBK,OAAxB;AACH;AAHM,GALe;AAU1BC,EAAAA,OAAO,EAAE;AACLC,IAAAA,SADK,kCACsC;AAAA,UAA/BC,MAA+B,QAA/BA,MAA+B;AAAA,UAAnBC,KAAmB,SAAnBA,KAAmB;AAAA,UAAZC,QAAY,SAAZA,QAAY;;AAEvC,UAAGD,KAAK,IAAI,iBAAT,IAA8BC,QAAQ,IAAI,MAA7C,EAAoD;AAChDF,QAAAA,MAAM,CAAC,oBAAD,EAAuB,IAAvB,CAAN;AACAd,QAAAA,MAAM,CAACiB,IAAP,CAAY,GAAZ;AACH;AACJ,KAPI;AAQLC,IAAAA,WARK,8BAQmB;AAAA,UAAVJ,MAAU,SAAVA,MAAU;AACpBA,MAAAA,MAAM,CAAC,oBAAD,EAAuB,KAAvB,CAAN;AACAd,MAAAA,MAAM,CAACiB,IAAP,CAAY,GAAZ;AACH;AAXI,GAViB;AAuB1BE,EAAAA,OAAO,EAAE;AACLb,IAAAA,eADK,2BACWD,KADX,EACkB;AACnB,aAAOA,KAAK,CAACC,eAAb;AACH;AAHI;AAvBiB,CAAf,CAAf","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport router from '@/router';\n\nimport VuexPersistence from 'vuex-persist'\n\nVue.use(Vuex);\n\nconst bitcoinApi = 'https://api.coindesk.com/v1/bpi/currentprice.json';\n\n\n\nexport default new Vuex.Store({\n    state: {\n        isAuthenticated: false,\n    },\n    plugins: [new VuexPersistence().plugin],\n    mutations: {\n        setIsAuthenticated(state, payload) {\n            state.isAuthenticated = payload;\n        }\n    },\n    actions: {\n        userLogin({ commit }, { email, password }) {\n\n            if(email == \"admin@admin.com\" && password == 123456){\n                commit('setIsAuthenticated', true);\n                router.push('/');\n            }\n        },\n        userSignOut({ commit }) {\n            commit('setIsAuthenticated', false);\n            router.push('/');\n        }\n    },\n    getters: {\n        isAuthenticated(state) {\n            return state.isAuthenticated;\n        }\n    }\n});"]}]}