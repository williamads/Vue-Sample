{"remainingRequest":"/home/williamads/Documentos/Vue-Sample/node_modules/babel-loader/lib/index.js!/home/williamads/Documentos/Vue-Sample/node_modules/eslint-loader/index.js??ref--13-0!/home/williamads/Documentos/Vue-Sample/src/store.js","dependencies":[{"path":"/home/williamads/Documentos/Vue-Sample/src/store.js","mtime":1550170110416},{"path":"/home/williamads/Documentos/Vue-Sample/node_modules/cache-loader/dist/cjs.js","mtime":1550166607198},{"path":"/home/williamads/Documentos/Vue-Sample/node_modules/babel-loader/lib/index.js","mtime":1550166607162},{"path":"/home/williamads/Documentos/Vue-Sample/node_modules/eslint-loader/index.js","mtime":1550166607454}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.iterator\";\nimport \"core-js/modules/es6.promise\";\nimport \"core-js/modules/es6.object.assign\";\nimport \"core-js/modules/es7.promise.finally\";\nimport Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport router from '@/router';\nimport VuexPersistence from 'vuex-persist';\nVue.use(Vuex);\nvar bitcoinApi = 'https://api.coindesk.com/v1/bpi/currentprice.json'; //const githubApi = 'https://api.github.com/users/williamads/repos';\n\nvar bitcoinClient = axios.create({\n  baseURL: bitcoinApi\n}); //const githubClient = axios.create({\n//    baseURL: githubApi\n//})\n\nexport default new Vuex.Store({\n  state: {\n    isAuthenticated: false\n  },\n  plugins: [new VuexPersistence().plugin],\n  mutations: {\n    setIsAuthenticated: function setIsAuthenticated(state, payload) {\n      state.isAuthenticated = payload;\n    },\n    setRepositories: function setRepositories(state, payload) {\n      state.repositories = payload;\n    }\n  },\n  actions: {\n    userLogin: function userLogin(_ref, _ref2) {\n      var commit = _ref.commit;\n      var email = _ref2.email,\n          password = _ref2.password;\n\n      if (email == \"admin@admin.com\" && password == 123456) {\n        commit('setIsAuthenticated', true);\n        router.push('/');\n      }\n    },\n    userSignOut: function userSignOut(_ref3) {\n      var commit = _ref3.commit;\n      commit('setIsAuthenticated', false);\n      router.push('/');\n    },\n    getRespositories: function getRespositories(_ref4) {\n      var commit = _ref4.commit;\n      var baseURI = 'https://api.github.com/users/williamads/repos';\n      axios.get(baseURI).then(function (response) {\n        commit('setRepositories', response.data);\n      }).catch(function () {\n        commit('setRepositories', []);\n      });\n    }\n  },\n  getters: {\n    isAuthenticated: function isAuthenticated(state) {\n      return state.isAuthenticated;\n    },\n    getBitcoinInfo: function getBitcoinInfo() {\n      return bitcoinClient.get();\n    }\n  }\n});",{"version":3,"sources":["/home/williamads/Documentos/Vue-Sample/src/store.js"],"names":["Vue","Vuex","axios","router","VuexPersistence","use","bitcoinApi","bitcoinClient","create","baseURL","Store","state","isAuthenticated","plugins","plugin","mutations","setIsAuthenticated","payload","setRepositories","repositories","actions","userLogin","commit","email","password","push","userSignOut","getRespositories","baseURI","get","then","response","data","catch","getters","getBitcoinInfo"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,IAAP,MAAiB,MAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEAJ,GAAG,CAACK,GAAJ,CAAQJ,IAAR;AAEA,IAAMK,UAAU,GAAG,mDAAnB,C,CACA;;AAEA,IAAMC,aAAa,GAAGL,KAAK,CAACM,MAAN,CAAa;AAC/BC,EAAAA,OAAO,EAAEH;AADsB,CAAb,CAAtB,C,CAIA;AACA;AACA;;AAEA,eAAe,IAAIL,IAAI,CAACS,KAAT,CAAe;AAC1BC,EAAAA,KAAK,EAAE;AACHC,IAAAA,eAAe,EAAE;AADd,GADmB;AAI1BC,EAAAA,OAAO,EAAE,CAAC,IAAIT,eAAJ,GAAsBU,MAAvB,CAJiB;AAK1BC,EAAAA,SAAS,EAAE;AACPC,IAAAA,kBADO,8BACYL,KADZ,EACmBM,OADnB,EAC4B;AAC/BN,MAAAA,KAAK,CAACC,eAAN,GAAwBK,OAAxB;AACH,KAHM;AAIPC,IAAAA,eAJO,2BAISP,KAJT,EAIgBM,OAJhB,EAIwB;AAC3BN,MAAAA,KAAK,CAACQ,YAAN,GAAqBF,OAArB;AACH;AANM,GALe;AAa1BG,EAAAA,OAAO,EAAE;AACLC,IAAAA,SADK,kCACsC;AAAA,UAA/BC,MAA+B,QAA/BA,MAA+B;AAAA,UAAnBC,KAAmB,SAAnBA,KAAmB;AAAA,UAAZC,QAAY,SAAZA,QAAY;;AAEvC,UAAGD,KAAK,IAAI,iBAAT,IAA8BC,QAAQ,IAAI,MAA7C,EAAoD;AAChDF,QAAAA,MAAM,CAAC,oBAAD,EAAuB,IAAvB,CAAN;AACAnB,QAAAA,MAAM,CAACsB,IAAP,CAAY,GAAZ;AACH;AACJ,KAPI;AAQLC,IAAAA,WARK,8BAQmB;AAAA,UAAVJ,MAAU,SAAVA,MAAU;AACpBA,MAAAA,MAAM,CAAC,oBAAD,EAAuB,KAAvB,CAAN;AACAnB,MAAAA,MAAM,CAACsB,IAAP,CAAY,GAAZ;AACH,KAXI;AAYLE,IAAAA,gBAZK,mCAYuB;AAAA,UAATL,MAAS,SAATA,MAAS;AACxB,UAAMM,OAAO,GAAG,+CAAhB;AACA1B,MAAAA,KAAK,CAAC2B,GAAN,CAAUD,OAAV,EACKE,IADL,CACU,UAAAC,QAAQ,EAAI;AACdT,QAAAA,MAAM,CAAC,iBAAD,EAAoBS,QAAQ,CAACC,IAA7B,CAAN;AACH,OAHL,EAIKC,KAJL,CAIW,YAAM;AACTX,QAAAA,MAAM,CAAC,iBAAD,EAAoB,EAApB,CAAN;AACH,OANL;AAOH;AArBI,GAbiB;AAoC1BY,EAAAA,OAAO,EAAE;AACLtB,IAAAA,eADK,2BACWD,KADX,EACkB;AACnB,aAAOA,KAAK,CAACC,eAAb;AACH,KAHI;AAILuB,IAAAA,cAJK,4BAIW;AACZ,aAAO5B,aAAa,CAACsB,GAAd,EAAP;AACH;AANI;AApCiB,CAAf,CAAf","sourcesContent":["import Vue from 'vue';\nimport Vuex from 'vuex';\nimport axios from 'axios';\nimport router from '@/router';\n\nimport VuexPersistence from 'vuex-persist'\n\nVue.use(Vuex);\n\nconst bitcoinApi = 'https://api.coindesk.com/v1/bpi/currentprice.json';\n//const githubApi = 'https://api.github.com/users/williamads/repos';\n\nconst bitcoinClient = axios.create({\n    baseURL: bitcoinApi\n})\n\n//const githubClient = axios.create({\n//    baseURL: githubApi\n//})\n\nexport default new Vuex.Store({\n    state: {\n        isAuthenticated: false,\n    },\n    plugins: [new VuexPersistence().plugin],\n    mutations: {\n        setIsAuthenticated(state, payload) {\n            state.isAuthenticated = payload;\n        },\n        setRepositories(state, payload){\n            state.repositories = payload;\n        }\n    },\n    actions: {\n        userLogin({ commit }, { email, password }) {\n\n            if(email == \"admin@admin.com\" && password == 123456){\n                commit('setIsAuthenticated', true);\n                router.push('/');\n            }\n        },\n        userSignOut({ commit }) {\n            commit('setIsAuthenticated', false);\n            router.push('/');\n        },\n        getRespositories({ commit }){\n            const baseURI = 'https://api.github.com/users/williamads/repos'\n            axios.get(baseURI)\n                .then(response => {\n                    commit('setRepositories', response.data)\n                })\n                .catch(() => {\n                    commit('setRepositories', []);\n                })\n        }\n    },\n    getters: {\n        isAuthenticated(state) {\n            return state.isAuthenticated;\n        },\n        getBitcoinInfo(){\n            return bitcoinClient.get();\n        },\n        //getRepos(){\n        //    return githubClient.get();\n        //}\n    }\n});\n"]}]}